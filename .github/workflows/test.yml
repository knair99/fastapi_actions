name: CI Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t fastapi-app .

      - name: Run Unit Tests inside Docker with coverage
        run: |
          docker run --rm \
            -e PYTHONPATH=/app \
            -v ${{ github.workspace }}/coverage:/app/coverage \
            fastapi-app poetry run pytest --cov=app --cov-report=xml:/app/coverage/coverage.xml --cov-report=html:/app/coverage/html tests/test_unit.py

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: /app/coverage/coverage.xml  # Path to coverage report
          flags: unittests  # Optional flag to label this report in Codecov
          name: codecov-coverage-report  # Name for the Codecov report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}  # Set the token in GitHub Secrets

      - name: Publish Coverage Report as an Artifact
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: ./coverage/html/  # Upload the entire HTML coverage report

  acceptance-tests:
    name: Run Acceptance Tests
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t fastapi-app .

      - name: Run Docker container
        run: docker run -d -p 8000:8000 --name fastapi-container fastapi-app

      - name: Wait for container to be ready
        run: |
          until curl -s http://localhost:8000/docs; do
            echo "Waiting for FastAPI to start..."
            sleep 5
          done

      - name: Run Acceptance Tests
        env:
          PYTHONPATH: /app  # Set PYTHONPATH as environment variable
        run: docker run --rm --network host -e PYTHONPATH=/app fastapi-app poetry run pytest tests/test_acceptance.py
