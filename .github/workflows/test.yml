name: CI Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t fastapi-app .

      - name: Run Unit Tests inside Docker with coverage
        run: |
          docker run --rm \
            -e PYTHONPATH=/app \
            -v ${{ github.workspace }}/coverage:/app/coverage \
            fastapi-app poetry run pytest --cov=app --cov-report=xml:/app/coverage/coverage-unit.xml --cov-report=html:/app/coverage/html --cov-config=/app/.coveragerc tests/test_unit.py
          docker run --rm \
            -v ${{ github.workspace }}/coverage:/app/coverage \
            fastapi-app mv /app/.coverage /app/coverage/.coverage.unit

      - name: Upload Unit Test Coverage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-coverage-report
          path: coverage/

  acceptance-tests:
    name: Run Acceptance Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t fastapi-app .

      - name: Run Docker container
        run: docker run -d -p 8000:8000 --name fastapi-container fastapi-app

      - name: Wait for FastAPI to be ready
        run: |
          until curl -s http://localhost:8000/docs; do
            echo "Waiting for FastAPI to start..."
            sleep 5
          done

      - name: Run Acceptance Tests with Coverage
        run: |
          docker run --rm --network host -e PYTHONPATH=/app -v ${{ github.workspace }}/coverage:/app/coverage fastapi-app poetry run pytest --cov=app --cov-report=xml:/app/coverage/coverage-acceptance.xml --cov-report=html:/app/coverage/html --cov-config=/app/.coveragerc tests/test_acceptance.py
          docker run --rm \
            -v ${{ github.workspace }}/coverage:/app/coverage \
            fastapi-app mv /app/.coverage /app/coverage/.coverage.acceptance

      - name: Combine Coverage Reports
        run: |
          ls -l ${{ github.workspace }}/coverage  # Ensure coverage files exist
          docker run --rm -v ${{ github.workspace }}/coverage:/app/coverage fastapi-app poetry run coverage combine /app/coverage/.coverage.unit /app/coverage/.coverage.acceptance
          docker run --rm -v ${{ github.workspace }}/coverage:/app/coverage fastapi-app poetry run coverage xml -o /app/coverage/coverage.xml

      - name: Upload Combined Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage.xml
          flags: merged-coverage
          name: merged-coverage-report
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Combined Coverage Report as an Artifact
        uses: actions/upload-artifact@v3
        with:
          name: merged-coverage-report
          path: coverage/html/

      - name: Tear Down Docker Container
        run: docker stop fastapi-container && docker rm fastapi-container
